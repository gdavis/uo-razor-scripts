# Lumberjack by Aphlux
# 
# Setup: 
# - Configure Organizer 10 to store logs in a nested bag 
# - Update the maxWeight below to match your character
#
# Features:
# - Non-blocking wait times
# - Enable tracking skill on start
# - PK detection
# - Automatic Recall Esacpe
# - Configurable Weight
# - Packie Support
# - Pause and Hide during World Save
# - Auto-equips axe
# - Prints type of lumber gathered
# - Hide when the node is empty
# - Move cut logs to container

### User Settings --------------
# Change the variables below to
# the character doing the mining.

# enter a weight that is 
# 2 less than max to not go overweight.
@setvar! maxWeight 565



################################
## !! DEVELOPER AREA BELOW !! ##
## !! PROCEED WITH CAUTION !! ##

## Script Init ------------------

# isActive is set to true for the duration of the script,
# and set to false whenever we reach and endpoint
# and need to loop back to the start. this
# gives us a mechanism to know if the script
# was stopped during execution and needs 
# the state variables reset to start a new run.
if not varexist isActive
    @setvar! isActive 0
    clearsysmsg 
endif

# check if the previous script was interrupted
if isActive = 1
    clearsysmsg 

    removetimer 'chopTime'
    removetimer 'waitAlert'
    removetimer equipTimer
    removetimer hideTimer
    
    @setvar! isChopping 0
    @setvar! isActive 0
    @setvar! isWorldSaving 0
    @setvar! isEquipping 0
    @setvar! shouldHide 0
    
    overhead 'Starting Lumberjack' 24
endif

# constants
@setvar! actionDelay 275
@setvar! chopDuration 4500
@setvar! chopWait 7500
@setvar! messageThrottle 3000
@setvar! hatchetID 3908
@setvar! hideDelay 2000

# mark script as running
@setvar! isActive 1

if usePackie == 1 and not varexist packie
    overhead 'Select or pack horse or llama:'
    setvar packie
endif

if not timerexists 'chopTime'
    createtimer  'chopTime'
endif

if not timerexists hideTimer
    createtimer hideTimer
endif

if not varexist isChopping
    @setvar! isChopping 0
endif

if not timerexists 'waitAlert'
    createtimer 'waitAlert'
endif


## Start ----------------------    
#sysmsg "Im chopping"

if dead
    overhead 'YOU DIED' 38
    sysmsg 'YOU DIED' 38
    sysmsg 'Stopping Miner.' 24
    @setvar! isActive 0
    stop
endif


## Enable Tracking Buff
@setvar! tracking_gump_id 4267467659

if skill 'Tracking' >= 50 and not findbuff 'Tracking'
    overhead 'Setup tracking...' 48    

    while not gumpexists tracking_gump_id
        sysmsg 'Opening tracking gump...' 53
        skill 'tracking'
        waitforgump tracking_gump_id 5000
    endwhile

    if gumpexists tracking_gump_id
        if not ingump 'Stop Hunting' 4267467659 # NOTE: using tracking_gump_id here causes a script error
            overhead 'Started tracking' 65
            sysmsg 'Tracking players enabled' 65
            gumpresponse 6
            wait actionDelay
        else
            overhead 'Already Hunting' 55
            sysmsg 'Tracking already enabled' 55
        endif
        
        gumpclose tracking_gump_id
    endif
endif


## World Save -----------------

if not varexist isWorldSaving
    @setvar! isWorldSaving 0
endif

if insysmsg 'The world is saving'
    if insysmsg 'World save complete'
        overhead 'Save complete, continuing...' 53
        clearsysmsg 
        @setvar! isWorldSaving 0
        settimer chopTime 0
    else
        overhead 'Detected world save!'
        @setvar! isWorldSaving 1    
        @setvar! shouldHide 1
        @setvar! isActive 0
        settimer chopTime 0
    endif
    replay
endif


## Recall Escape --------------

# Ask user to provide the recall rune
if not varexist recallTarget or recallTarget = 0
    overhead 'Target the recall runebook or rune to use:'
    @setvar recallTarget 0
    setvar recallTarget
endif

# Check if the stored rune 
# is actually reachable
if recallTarget = 0
    overhead 'Failed to set a recall target!' 38
    loop
elseif find recallTarget backpack
    getlabel recallTarget targetName
    @setvar! foundRecallable 0
    
    @clearignore 
    while findtype 7956|29103|8901 backpack as recallable
        if recallable == recallTarget
            @setvar! foundRecallable 1
            break
        endif
        @ignore recallable
    endwhile
    @clearignore
    
    if foundRecallable = 0
        sysmsg 'WARNING: Recall target is not set to a rune, runebook, or rune tome!' 54
    endif
else
    # rune targets are not found in the backpack
    # for whatever reason, so we need do 
    # search for it by type and see if it exists
    @setvar! foundRune 0
    @clearignore
    while foundRune = 0 and findtype 'recall rune' backpack as rune
        @ignore rune
        if rune = recallTarget
            # overhead 'Found valid recall target' 69
            @setvar! foundRune 1
            break
        endif
    endwhile
    
    if foundRune = 0 
        overhead 'Failed to find a valid recall target!' 38
        @setvar recallTarget 0
        loop
    endif    
endif


## PK Check --------------

if insysmsg 'Now tracking:' or insysmsg 'Distance to destination'
    overhead 'PK WARNING - ESCAPE'

    # if you have a custom recall script, 
    # replace this value with yours. otherwise,
    # we will try to use the recall target and recall.
    script 'RecallInn'

    if skill 'magery' >= 60
        overhead 'Time to leave!' 34
        cast 'Recall'
        waitfortarget 6000
        target 'recallTarget'
    else
        overhead 'PK Detected!' 38
    endif
    
    if skill 'Hiding' >= 50 
        while not hidden and not dead
            skill 'hiding'
            wait actionDelay
        endwhile
    endif
    
    sysmsg 'Lumberjack stopped after Escaping PK!' 44
    @setvar! isActive 0
    stop
endif


## Hiding
if shouldHide = 1
    if not hidden and skill 'hiding' > 50
        skill 'Hiding'
        wait actionDelay
    endif
    
    if hidden 
        @setvar! shouldHide 0
    endif
endif


## Check Weight ----------------
# check if bags are full
if weight >= maxWeight
    
    if timer 'waitAlert' > messageThrottle
        settimer 'waitAlert' 0
        overhead 'Carrying too much!' 38
        sysmsg 'Carrying too much!' 38
    endif
    
    if not hidden and skill 'hiding' > 50
        skill 'Hiding'
    endif
    
    wait actionDelay
    @setvar! isActive 0
    replay  
endif


## Axe --------------------
#@setvar! axeEquipped 0
#if findtype hatchetID lefthand
#    @setvar! axeEquipped 1
#endif
#
# timer started after equipping a new pickaxe.
# used to fix an issue where immediately
# trying to use the axe would
# not work if it was just equipped.
@setvar! equipDelay 3000
if not timerexists equipTimer
    createtimer equipTimer
endif

if isEquipping = 1 
    if timer equipTimer < equipDelay
        overhead 'waiting to equip' 44
        wait actionDelay
        replay
    else 
        @setvar! isEquipping 0
    endif
endif

if lhandempty
    if not findtype hatchetID self
        overhead 'Out of Hatchets' 38
        
        if not hidden and skill 'hiding' > 50
            skill 'Hiding'
            wait actionDelay
        endif
        
        @setvar! isActive 0
        replay
    else 
        overhead 'Equipping Hatchet' 53
        dclicktype hatchetID backpack
        settimer equipTimer 0
        @setvar! isEquipping 1
        @setvar! isActive 0
        replay
    endif
endif


## Do the chop ----------------
# use the hatchet
if isChopping = 0 and isEquipping = 0
    #overhead 'new chop'

    if not hidden
        if findtype hatchetID lefthand as axe
            overhead ' '
            overhead '*swings hatchet*' 645
            dclick axe
            wft 7000
            target self
            
            settimer 'chopTime' 0
            @setvar! isChopping 1
            @setvar! shouldHide 0
            wait actionDelay
        else
            overhead 'No hatchets!' 38
        endif
    else
        # only show an overhead every few seconds
        if timer 'waitAlert' > messageThrottle
            overhead 'Waiting...' 902
            settimer 'waitAlert' 0
        endif
        
        wait actionDelay
        @setvar! isActive 0
        replay
    endif
endif


## Chop Result -----------------
# check results after digging

if isChopping = 1
    if insysmsg 'Harvesting is not allowed'
        overhead 'Cannot chop here!' 38
        
        @setvar! isChopping 0
        @setvar! isActive 0
        @setvar! shouldHide 1
        replay
    endif
    
    if insysmsg 'You do not see any harvestable resources'
        overhead 'EMPTY' 923
        sysmsg 'No wood here to chop.' 138
        
        @setvar! shouldHide 1
        @setvar! isChopping 0
        @setvar! isActive 0
        replay
    endif
    
    # check if we fail
    if insysmsg 'You hack'
        overhead 'YOU FAILED' 38

        @setvar! isChopping 0
        @setvar! isActive 0
        replay
    endif
endif

if isChopping = 1 and timer 'chopTime' > chopDuration
    # check if we were successful
    @setvar! chopSuccess 0
    
    if insysmsg 'dullwood'
        overhead 'DULLWOOD' 805
        @setvar! chopSuccess 1
    elseif insysmsg 'shadowwood'
        overhead 'SHADOWWOOD' 902
        @setvar! chopSuccess 1
    elseif insysmsg 'copperwood'
        overhead 'COPPERWOOD' 144
        @setvar! chopSuccess 1
    elseif insysmsg 'bronzewood'
        overhead 'BRONZEWOOD' 242
        @setvar! chopSuccess 1
    elseif insysmsg 'goldenwood'
        overhead 'GOLDENWOOD' 50
        @setvar! chopSuccess 1
    elseif insysmsg 'rosewood'
        overhead 'ROSEWOOD' 35
        @setvar! chopSuccess 1
    elseif insysmsg 'verewood'
        overhead 'VEREWOOD' 270
        @setvar! chopSuccess 1
    elseif insysmsg 'valewood'
        overhead 'VALEWOOD' 94
        @setvar! chopSuccess 1
    elseif insysmsg 'avarwood'
        overhead 'AVARWOOD' 209
        @setvar! chopSuccess 1
        elseif insysmsg 'You chop some logs'
            overhead 'WOOD' 640
        @setvar! chopSuccess 1
    else 
        setvar! 'success' 0
    endif
    
    if chopSuccess = 1
        organizer 10
        wait 250

        @setvar! shouldHide 0
        @setvar! isChopping 0
        @setvar! isActive 0
        replay
    endif
    
    # recent travel
    if insysmsg 'You have recently traveled'
        overhead 'Travel Cooldown...' 24

        @setvar! shouldHide 1
        @setvar! isChopping 0
        @setvar! isActive 0
        replay
    endif

    if insysmsg 'That is too far away'
        overhead 'Moving...' 24

        @setvar! shouldHide 0
        @setvar! isChopping 0 
        @setvar! isActive 0
        replay
    endif

    if insysmsg 'You must wait'
        overhead 'Too fast?' 44

        @setvar! isActive 0
        replay
    endif
else
    wait actionDelay
endif

if insysmsg 'the world is saving'
    @setvar! isWorldSaving 1
endif

@setvar! isActive 0
replay